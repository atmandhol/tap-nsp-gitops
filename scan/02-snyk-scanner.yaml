#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
#@ load("@scan:funcs.star", "is_supply_chain", "is_profile", "get_scanner_for_ns", "is_scanpolicy_lax", "get_snyk_values")
#@ if is_supply_chain(['testing_scanning']) and is_profile(['full', 'build']) and get_scanner_for_ns() == "snyk":
---
apiVersion: external-secrets.io/v1alpha1
kind: ExternalSecret
metadata:
  name: snyk-token-secret
spec:
  data:
  - secretKey: snyk_token
    remoteRef:
      key: snyk_token
  refreshInterval: 10m
  secretStoreRef:
    kind: ClusterSecretStore
    name: google-secrets-manager
  target:
    name: snyk-token-secret
#@ end

#@ if is_supply_chain(['testing_scanning']) and is_profile(['full', 'build']) and get_scanner_for_ns() == "snyk":
---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  name: #@ "snyk-scanner-" + data.values.name
  namespace: tap-install
  annotations:
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  packageRef:
    refName: snyk.scanning.apps.tanzu.vmware.com
    versionSelection:
      constraints: ">1.0.0"
      prereleases: {}
  serviceAccountName: tap-install-sa
  values:
  - secretRef:
      name: #@ "snyk-scanner-" + data.values.name
---
apiVersion: v1
kind: Secret
metadata:
  name: #@ "snyk-scanner-" + data.values.name
  namespace: tap-install
  annotations:
    kapp.k14s.io/create-strategy: fallback-on-update
stringData:
  values.yml: #@ yaml.encode(get_snyk_values())
#@ end
